{"version":3,"sources":["components/layouts/FullHeightCardLayout/index.js","utils/messages.js","utils/propTypesConstants.js","components/elements/Todo/index.js","components/elements/NewTodoInput/index.js","components/elements/CompletedTodos/index.js","components/views/Todos/index.js","containers/TodosContainer/index.js","TodoApp.js","serviceWorker.js","index.js"],"names":["FullHeightCardLayout","children","title","compact","className","cn","Card","Typography","variant","color","component","defaultProps","undefined","todoCheckboxAriaLabel","PropTypes","shape","id","number","isRequired","todo","string","completed","bool","deleteTodoAriaLabel","Todo","toggleTodo","removeTodo","updateTodo","useState","hovered","setHovered","onMouseEnter","onMouseLeave","TextField","multiline","fullWidth","defaultValue","onChange","e","target","value","InputProps","startAdornment","Checkbox","checked","inputProps","endAdornment","InputAdornment","position","IconButton","onClick","aria-label","NewTodoInput","addTodo","newTodoPlaceholderMessage","newTodoActionMessage","todoInput","setTodoInput","handleNewTodo","type","label","onKeyPress","key","preventDefault","onBlur","CompletedTodos","message","expandLabel","expanded","toggleExpanded","role","tabIndex","aria-expanded","align","Todos","completedItems","pendingTodos","completedTodos","completedTodosExpanded","setCompletedTodosExpanded","TransitionGroup","map","CSSTransition","classNames","timeout","unmountOnExit","length","in","TodosContainer","theme","useTheme","useMediaQuery","breakpoints","down","todos","setTodos","filter","sort","a","b","newTodo","timestamp","Date","now","removedTodo","toggleTodoId","updateTodoId","updateTodoText","TodoApp","createMuiTheme","typography","fontFamily","ThemeProvider","CssBaseline","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.01643dad.chunk.js","sourcesContent":["// @ packages\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// @ own\r\nimport './styles.scss';\r\n\r\nconst FullHeightCardLayout = ({\r\n  children,\r\n  title,\r\n  compact,\r\n  className,\r\n}) => (\r\n  <section\r\n    className={cn(\r\n      'full-height-card-layout',\r\n      { 'full-height-card-layout--compact': compact },\r\n      className,\r\n    )}\r\n  >\r\n    <Card className=\"full-height-card-layout__card\">\r\n      {\r\n        title && (\r\n          <Typography\r\n            className=\"full-height-card-layout__title\"\r\n            variant={compact ? 'h5' : 'h4'}\r\n            color=\"primary\"\r\n            component=\"h1\"\r\n          >\r\n            {title}\r\n          </Typography>\r\n        )\r\n      }\r\n      {children}\r\n    </Card>\r\n  </section>\r\n);\r\n\r\nFullHeightCardLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string,\r\n  compact: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nFullHeightCardLayout.defaultProps = {\r\n  title: undefined,\r\n  compact: false,\r\n  className: '',\r\n};\r\n\r\nexport default FullHeightCardLayout;\r\n","export const appTitleMessage = 'Simple todo list using React Hooks';\r\nexport const newTodoPlaceholderMessage = 'New list item';\r\nexport const newTodoActionMessage = 'Add item';\r\nexport const completedItemsMessage = (completedItems) => (\r\n  `${completedItems} ${completedItems === 1 ? 'item' : 'items'} completed`\r\n);\r\nexport const expandCompletedItemsAriaLabel = (expanded) => (\r\n  expanded ? 'Collapse completed items' : 'Expand completed items'\r\n);\r\nexport const todoCheckboxAriaLabel = (todo) => (\r\n  `Mark  \"${todo.todo}\" as ${todo.completed ? 'pending' : 'completed'}`\r\n);\r\nexport const deleteTodoAriaLabel = (todo) => `Delete \"${todo.todo}\"`;\r\n","// @ packages\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TodoPropTypes = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  todo: PropTypes.string.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n});\r\n","// @ packages\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\n// @ utils\r\nimport { TodoPropTypes } from 'utils/propTypesConstants';\r\nimport { todoCheckboxAriaLabel, deleteTodoAriaLabel } from 'utils/messages';\r\n\r\n// @ own\r\nimport './styles.scss';\r\n\r\nconst Todo = ({\r\n  className,\r\n  todo,\r\n  toggleTodo,\r\n  removeTodo,\r\n  updateTodo,\r\n}) => {\r\n  const [hovered, setHovered] = useState(false);\r\n  return (\r\n    <div\r\n      className={cn('todo', className)}\r\n      onMouseEnter={() => setHovered(true)}\r\n      onMouseLeave={() => setHovered(false)}\r\n    >\r\n      <TextField\r\n        variant=\"outlined\"\r\n        multiline\r\n        fullWidth\r\n        defaultValue={todo.todo}\r\n        onChange={(e) => updateTodo(todo.id, e.target.value)}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <Checkbox\r\n              checked={todo.completed}\r\n              onChange={() => toggleTodo(todo.id)}\r\n              color=\"secondary\"\r\n              inputProps={{ 'aria-label': todoCheckboxAriaLabel(todo) }}\r\n            />\r\n          ),\r\n          endAdornment: hovered && (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                onClick={() => removeTodo(todo)}\r\n                aria-label={deleteTodoAriaLabel(todo)}\r\n              >\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nTodo.propTypes = {\r\n  className: PropTypes.string,\r\n  todo: TodoPropTypes.isRequired,\r\n  toggleTodo: PropTypes.func.isRequired,\r\n  removeTodo: PropTypes.func.isRequired,\r\n  updateTodo: PropTypes.func.isRequired,\r\n};\r\n\r\nTodo.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nexport default Todo;\r\n","// @ packages\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\n\r\n// @ own\r\nimport './styles.scss';\r\n\r\nconst NewTodoInput = ({\r\n  className,\r\n  addTodo,\r\n  newTodoPlaceholderMessage,\r\n  newTodoActionMessage,\r\n}) => {\r\n  const [todoInput, setTodoInput] = useState('');\r\n  const handleNewTodo = () => {\r\n    addTodo(todoInput);\r\n    setTodoInput('');\r\n  };\r\n  const handleOnKeyPress = (e) => {\r\n    if (todoInput === '' && e.key === 'Enter') {\r\n      e.preventDefault();\r\n    } else if (e.key === 'Enter') {\r\n      handleNewTodo();\r\n      e.preventDefault();\r\n    }\r\n  };\r\n  return (\r\n    <div className={cn('new-todo-input', className)}>\r\n      <TextField\r\n        type=\"submit\"\r\n        id=\"new-todo-input__text-field\"\r\n        label={newTodoPlaceholderMessage}\r\n        variant=\"filled\"\r\n        multiline\r\n        fullWidth\r\n        value={todoInput}\r\n        onChange={(e) => setTodoInput(e.target.value)}\r\n        onKeyPress={handleOnKeyPress}\r\n        onBlur={() => todoInput !== '' && handleNewTodo()}\r\n        InputProps={{\r\n          endAdornment: todoInput !== '' && (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                onClick={handleNewTodo}\r\n                aria-label={newTodoActionMessage}\r\n              >\r\n                <AddBoxIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nNewTodoInput.propTypes = {\r\n  className: PropTypes.string,\r\n  addTodo: PropTypes.func.isRequired,\r\n  newTodoPlaceholderMessage: PropTypes.string.isRequired,\r\n  newTodoActionMessage: PropTypes.string.isRequired,\r\n};\r\n\r\nNewTodoInput.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nexport default NewTodoInput;\r\n","// @ packages\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n// @ own\r\nimport './styles.scss';\r\n\r\nconst CompletedTodos = ({\r\n  className,\r\n  message,\r\n  expandLabel,\r\n  expanded,\r\n  toggleExpanded,\r\n  children,\r\n}) => (\r\n  <div className={cn('completed-todos', className)}>\r\n    <div\r\n      className=\"completed-todos__header\"\r\n      onClick={toggleExpanded}\r\n      onKeyPress={toggleExpanded}\r\n      role=\"button\"\r\n      tabIndex=\"0\"\r\n    >\r\n      <IconButton\r\n        className={cn(\r\n          'completed-todos__expand',\r\n          { 'completed-todos__expand-open': expanded },\r\n        )}\r\n        onClick={toggleExpanded}\r\n        aria-expanded={expanded}\r\n        aria-label={expandLabel}\r\n      >\r\n        <ExpandMoreIcon />\r\n      </IconButton>\r\n      <Typography\r\n        variant=\"h6\"\r\n        align=\"left\"\r\n        color=\"primary\"\r\n        component=\"h2\"\r\n      >\r\n        {message}\r\n      </Typography>\r\n    </div>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nCompletedTodos.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string.isRequired,\r\n  expandLabel: PropTypes.string.isRequired,\r\n  expanded: PropTypes.bool.isRequired,\r\n  toggleExpanded: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nCompletedTodos.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nexport default CompletedTodos;\r\n","// @ packages\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\n// @ components\r\nimport FullHeightCardLayout from 'components/layouts/FullHeightCardLayout';\r\nimport Todo from 'components/elements/Todo';\r\nimport NewTodoInput from 'components/elements/NewTodoInput';\r\nimport CompletedTodos from 'components/elements/CompletedTodos';\r\n\r\n// @ utils\r\nimport {\r\n  appTitleMessage,\r\n  newTodoPlaceholderMessage,\r\n  newTodoActionMessage,\r\n  completedItemsMessage,\r\n  expandCompletedItemsAriaLabel,\r\n} from 'utils/messages';\r\nimport { TodoPropTypes } from 'utils/propTypesConstants';\r\n\r\n// @ own\r\nimport './styles.scss';\r\n\r\nconst Todos = ({\r\n  pendingTodos,\r\n  completedTodos,\r\n  addTodo,\r\n  removeTodo,\r\n  toggleTodo,\r\n  updateTodo,\r\n  compact,\r\n}) => {\r\n  const [completedTodosExpanded, setCompletedTodosExpanded] = useState(false);\r\n  const toggleCompletedTodosExpanded = () => setCompletedTodosExpanded(!completedTodosExpanded);\r\n  return (\r\n    <FullHeightCardLayout\r\n      title={appTitleMessage}\r\n      compact={compact}\r\n    >\r\n      <TransitionGroup>\r\n        {\r\n          pendingTodos.map((todo) => (\r\n            <CSSTransition\r\n              key={todo.id}\r\n              classNames=\"fade-transition\"\r\n              timeout={500}\r\n              unmountOnExit\r\n            >\r\n              <Todo\r\n                todo={todo}\r\n                toggleTodo={toggleTodo}\r\n                removeTodo={removeTodo}\r\n                updateTodo={updateTodo}\r\n              />\r\n            </CSSTransition>\r\n          ))\r\n        }\r\n      </TransitionGroup>\r\n      <NewTodoInput\r\n        addTodo={addTodo}\r\n        newTodoPlaceholderMessage={newTodoPlaceholderMessage}\r\n        newTodoActionMessage={newTodoActionMessage}\r\n      />\r\n      { completedTodos.length > 0 && (\r\n        <CompletedTodos\r\n          message={completedItemsMessage(completedTodos.length)}\r\n          expandLabel={expandCompletedItemsAriaLabel(completedTodosExpanded)}\r\n          expanded={completedTodosExpanded}\r\n          toggleExpanded={toggleCompletedTodosExpanded}\r\n        >\r\n          <CSSTransition\r\n            classNames=\"expandable-transition\"\r\n            in={completedTodosExpanded}\r\n            timeout={500}\r\n            unmountOnExit\r\n          >\r\n            <TransitionGroup>\r\n              {\r\n                completedTodos.map((todo) => (\r\n                  <CSSTransition\r\n                    key={todo.id}\r\n                    classNames=\"fade-transition\"\r\n                    timeout={500}\r\n                    unmountOnExit\r\n                  >\r\n                    <Todo\r\n                      key={todo.id}\r\n                      todo={todo}\r\n                      toggleTodo={toggleTodo}\r\n                      removeTodo={removeTodo}\r\n                      updateTodo={updateTodo}\r\n                    />\r\n                  </CSSTransition>\r\n                ))\r\n              }\r\n            </TransitionGroup>\r\n          </CSSTransition>\r\n        </CompletedTodos>\r\n      )}\r\n    </FullHeightCardLayout>\r\n  );\r\n};\r\n\r\nTodos.propTypes = {\r\n  pendingTodos: PropTypes.arrayOf(TodoPropTypes).isRequired,\r\n  completedTodos: PropTypes.arrayOf(TodoPropTypes).isRequired,\r\n  addTodo: PropTypes.func.isRequired,\r\n  removeTodo: PropTypes.func.isRequired,\r\n  toggleTodo: PropTypes.func.isRequired,\r\n  updateTodo: PropTypes.func.isRequired,\r\n  compact: PropTypes.bool,\r\n};\r\n\r\nTodos.defaultProps = {\r\n  compact: false,\r\n};\r\n\r\nexport default Todos;\r\n","// @ packages\r\nimport React, { useState } from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n// @ components\r\nimport Todos from 'components/views/Todos';\r\n\r\nconst TodosContainer = () => {\r\n  const theme = useTheme();\r\n  const compact = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const [todos, setTodos] = useState([]);\r\n  const pendingTodos = todos\r\n    .filter((todo) => !todo.completed)\r\n    .sort((a, b) => a.id - b.id);\r\n  const completedTodos = todos\r\n    .filter((todo) => todo.completed)\r\n    .sort((a, b) => a.id - b.id);\r\n\r\n  const addTodo = (newTodo) => {\r\n    const timestamp = Date.now();\r\n    setTodos([\r\n      ...todos,\r\n      {\r\n        id: timestamp,\r\n        todo: newTodo,\r\n        completed: false,\r\n      },\r\n    ]);\r\n  };\r\n  const removeTodo = (removedTodo) => (\r\n    setTodos(todos.filter((todo) => todo.id !== removedTodo.id))\r\n  );\r\n  const toggleTodo = (toggleTodoId) => (\r\n    setTodos(\r\n      todos.map((todo) => (\r\n        todo.id === toggleTodoId\r\n          ? { ...todo, completed: !todo.completed }\r\n          : todo\r\n      )),\r\n    )\r\n  );\r\n  const updateTodo = (updateTodoId, updateTodoText) => (\r\n    setTodos(\r\n      todos.map((todo) => (\r\n        todo.id === updateTodoId\r\n          ? { ...todo, todo: updateTodoText }\r\n          : todo\r\n      )),\r\n    )\r\n  );\r\n\r\n  return (\r\n    <Todos\r\n      pendingTodos={pendingTodos}\r\n      completedTodos={completedTodos}\r\n      addTodo={addTodo}\r\n      removeTodo={removeTodo}\r\n      toggleTodo={toggleTodo}\r\n      updateTodo={updateTodo}\r\n      compact={compact}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TodosContainer;\r\n","// @ packages\r\nimport React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\n// @ components\r\nimport TodosContainer from 'containers/TodosContainer';\r\n\r\nconst TodoApp = () => {\r\n  const theme = createMuiTheme({\r\n    typography: {\r\n      fontFamily: 'cursive',\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <TodosContainer />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n","/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TodoApp from './TodoApp';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <TodoApp />,\r\n  // eslint-disable-next-line no-undef\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}